"""Add catalog, datastorm and radcor models

Revision ID: 0c7320fe1ff6
Revises: 0fac592968d3
Create Date: 2019-11-14 11:39:45.132304

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0c7320fe1ff6'
down_revision = '0fac592968d3'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Dataset',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('Id', sa.Integer(), nullable=False),
    sa.Column('Name', sa.String(length=50), nullable=False),
    sa.Column('Description', sa.String(length=512), nullable=False),
    sa.PrimaryKeyConstraint('Id'),
    schema='catalogo'
    )
    op.create_table('Products',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('Id', sa.BigInteger(), nullable=False),
    sa.Column('Dataset', sa.String(length=50), nullable=False),
    sa.Column('Type', sa.String(length=20), nullable=False),
    sa.Column('ProcessingDate', sa.DateTime(), nullable=True),
    sa.Column('GeometricProcessing', sa.String(length=20), nullable=False),
    sa.Column('RadiometricProcessing', sa.String(length=20), nullable=False),
    sa.Column('SceneId', sa.String(length=64), nullable=False),
    sa.Column('Band', sa.String(length=20), nullable=False),
    sa.Column('Resolution', sa.Float(), nullable=True),
    sa.Column('Filename', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('Id'),
    schema='catalogo'
    )
    op.create_table('Qlook',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('SceneId', sa.String(length=64), nullable=False),
    sa.Column('QLfilename', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('SceneId'),
    sa.UniqueConstraint('QLfilename'),
    schema='catalogo'
    )
    op.create_index(op.f('ix_catalogo_Qlook_SceneId'), 'Qlook', ['SceneId'], unique=False, schema='catalogo')
    op.create_table('Request',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('ReqId', sa.Integer(), nullable=False),
    sa.Column('UserId', sa.String(length=254), nullable=False),
    sa.Column('ReqDate', sa.DateTime(), nullable=False),
    sa.Column('StatusDate', sa.DateTime(), nullable=False),
    sa.Column('PayDate', sa.DateTime(), nullable=True),
    sa.Column('DelDate', sa.DateTime(), nullable=True),
    sa.Column('Priority', sa.Integer(), nullable=False),
    sa.Column('Operator', sa.String(length=20), nullable=False),
    sa.Column('addressId', sa.Integer(), nullable=False),
    sa.Column('Ip', sa.String(length=20), nullable=True),
    sa.Column('Country', sa.String(length=50), nullable=True),
    sa.Column('Language', sa.CHAR(length=2), nullable=False),
    sa.PrimaryKeyConstraint('ReqId'),
    schema='catalogo'
    )
    op.create_table('Scene',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('SceneId', sa.String(length=64), server_default=sa.text("''"), nullable=False),
    sa.Column('IdRunMode', sa.Integer(), nullable=True),
    sa.Column('Satellite', sa.String(length=50), nullable=True),
    sa.Column('Sensor', sa.String(length=6), nullable=False),
    sa.Column('Path', sa.String(length=11), nullable=True),
    sa.Column('Row', sa.String(length=11), nullable=True),
    sa.Column('Date', sa.Date(), nullable=True),
    sa.Column('Orbit', sa.Integer(), nullable=True),
    sa.Column('CenterLatitude', sa.Float(), nullable=True),
    sa.Column('CenterLongitude', sa.Float(), nullable=True),
    sa.Column('TL_Latitude', sa.Float(), nullable=True),
    sa.Column('TL_Longitude', sa.Float(), nullable=True),
    sa.Column('BR_Latitude', sa.Float(), nullable=True),
    sa.Column('BR_Longitude', sa.Float(), nullable=True),
    sa.Column('TR_Latitude', sa.Float(), nullable=True),
    sa.Column('TR_Longitude', sa.Float(), nullable=True),
    sa.Column('BL_Latitude', sa.Float(), nullable=True),
    sa.Column('BL_Longitude', sa.Float(), nullable=True),
    sa.Column('CenterTime', sa.Float(asdecimal=True), nullable=True),
    sa.Column('StartTime', sa.Float(asdecimal=True), nullable=True),
    sa.Column('StopTime', sa.Float(asdecimal=True), nullable=True),
    sa.Column('ImageOrientation', sa.Float(), nullable=True),
    sa.Column('SyncLosses', sa.Integer(), nullable=True),
    sa.Column('NumMissSwath', sa.Integer(), nullable=True),
    sa.Column('PerMissSwath', sa.Float(), nullable=True),
    sa.Column('BitSlips', sa.Integer(), nullable=True),
    sa.Column('CloudCoverQ1', sa.Integer(), nullable=True),
    sa.Column('CloudCoverQ2', sa.Integer(), nullable=True),
    sa.Column('CloudCoverQ3', sa.Integer(), nullable=True),
    sa.Column('CloudCoverQ4', sa.Integer(), nullable=True),
    sa.Column('CloudCoverMethod', sa.CHAR(length=1), nullable=True),
    sa.Column('Grade', sa.Float(), nullable=True),
    sa.Column('IngestDate', sa.DateTime(), nullable=True),
    sa.Column('Deleted', sa.SmallInteger(), nullable=False),
    sa.Column('Dataset', sa.String(length=50), nullable=True),
    sa.Column('ExportDate', sa.DateTime(), nullable=True),
    sa.Column('AuxPath', sa.String(length=11), nullable=True),
    sa.PrimaryKeyConstraint('SceneId'),
    schema='catalogo'
    )
    op.create_index('Scene_idx1', 'Scene', ['Satellite', 'Sensor'], unique=False, schema='catalogo')
    op.create_index('Scene_idx6', 'Scene', ['CloudCoverQ1', 'CloudCoverQ2', 'CloudCoverQ3', 'CloudCoverQ4'], unique=False, schema='catalogo')
    op.create_index(op.f('ix_catalogo_Scene_Date'), 'Scene', ['Date'], unique=False, schema='catalogo')
    op.create_index(op.f('ix_catalogo_Scene_Path'), 'Scene', ['Path'], unique=False, schema='catalogo')
    op.create_index(op.f('ix_catalogo_Scene_Row'), 'Scene', ['Row'], unique=False, schema='catalogo')
    op.create_index(op.f('ix_catalogo_Scene_Sensor'), 'Scene', ['Sensor'], unique=False, schema='catalogo')
    op.create_table('activities',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('app', sa.String(length=64), nullable=False),
    sa.Column('datacube', sa.String(length=32), nullable=True),
    sa.Column('tileid', sa.String(length=16), nullable=True),
    sa.Column('start', sa.Date(), nullable=False),
    sa.Column('end', sa.Date(), nullable=False),
    sa.Column('ttable', sa.String(length=16), nullable=True),
    sa.Column('tid', sa.BigInteger(), nullable=True),
    sa.Column('tsceneid', sa.String(length=64), nullable=True),
    sa.Column('band', sa.String(length=16), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=16), nullable=True),
    sa.Column('pstart', sa.DateTime(), nullable=True),
    sa.Column('pend', sa.DateTime(), nullable=True),
    sa.Column('elapsed', sa.Time(), nullable=True),
    sa.Column('retcode', sa.Integer(), nullable=True),
    sa.Column('message', sa.String(length=512), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='datastorm'
    )
    op.create_index('sceneid', 'activities', ['tsceneid', 'band'], unique=False, schema='datastorm')
    op.create_table('datacubes',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('datacube', sa.String(length=48), nullable=False),
    sa.Column('wrs', sa.String(length=16), nullable=False),
    sa.Column('tschema', sa.String(length=16), nullable=False),
    sa.Column('step', sa.Integer(), nullable=False),
    sa.Column('satsen', sa.String(length=32), nullable=False),
    sa.Column('bands', sa.String(length=128), nullable=False),
    sa.Column('quicklook', sa.String(length=64), server_default=sa.text("'swir2,nir,red'"), nullable=False),
    sa.Column('start', sa.Date(), nullable=True),
    sa.Column('end', sa.Date(), nullable=True),
    sa.Column('resx', sa.Float(), nullable=False),
    sa.Column('resy', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='datastorm'
    )
    op.create_table('mosaics',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('datacube', sa.String(length=32), nullable=False),
    sa.Column('tileid', sa.String(length=16), nullable=False),
    sa.Column('start', sa.Date(), nullable=False),
    sa.Column('end', sa.Date(), nullable=False),
    sa.Column('numcol', sa.Integer(), nullable=False),
    sa.Column('numlin', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='datastorm'
    )
    op.create_index('mosaics_general', 'mosaics', ['datacube', 'tileid', 'start', 'end'], unique=True, schema='datastorm')
    op.create_table('products',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('datacube', sa.String(length=48), nullable=False),
    sa.Column('tileid', sa.String(length=16), nullable=False),
    sa.Column('start', sa.Date(), nullable=False),
    sa.Column('end', sa.Date(), nullable=False),
    sa.Column('type', sa.String(length=16), server_default=sa.text("'SCENE'"), nullable=False),
    sa.Column('sceneid', sa.String(length=64), nullable=False),
    sa.Column('band', sa.String(length=16), nullable=False),
    sa.Column('cloud', sa.Float(), nullable=False),
    sa.Column('processingdate', sa.DateTime(), nullable=True),
    sa.Column('TL_Latitude', sa.Float(), nullable=True),
    sa.Column('TL_Longitude', sa.Float(), nullable=True),
    sa.Column('BR_Latitude', sa.Float(), nullable=True),
    sa.Column('BR_Longitude', sa.Float(), nullable=True),
    sa.Column('TR_Latitude', sa.Float(), nullable=True),
    sa.Column('TR_Longitude', sa.Float(), nullable=True),
    sa.Column('BL_Latitude', sa.Float(), nullable=True),
    sa.Column('BL_Longitude', sa.Float(), nullable=True),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='datastorm'
    )
    op.create_index('products_general', 'products', ['type', 'datacube', 'tileid', 'start', 'end'], unique=False, schema='datastorm')
    op.create_table('qlook',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('datacube', sa.String(length=48), nullable=False),
    sa.Column('tileid', sa.String(length=16), nullable=False),
    sa.Column('start', sa.Date(), nullable=False),
    sa.Column('end', sa.Date(), nullable=False),
    sa.Column('sceneid', sa.String(length=64), nullable=False),
    sa.Column('qlookfile', sa.String(length=256), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='datastorm'
    )
    op.create_index(op.f('ix_datastorm_qlook_sceneid'), 'qlook', ['sceneid'], unique=False, schema='datastorm')
    op.create_table('scenes',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('datacube', sa.String(length=32), nullable=False),
    sa.Column('tileid', sa.String(length=16), nullable=False),
    sa.Column('start', sa.Date(), nullable=False),
    sa.Column('end', sa.Date(), nullable=False),
    sa.Column('type', sa.String(length=16), server_default=sa.text("'SCENE'"), nullable=False),
    sa.Column('dataset', sa.String(length=16), nullable=False),
    sa.Column('sceneid', sa.String(length=64), nullable=False),
    sa.Column('band', sa.String(length=16), nullable=False),
    sa.Column('pathrow', sa.String(length=16), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('cloud', sa.Float(), nullable=False),
    sa.Column('resolution', sa.Float(), nullable=False),
    sa.Column('cloudratio', sa.Float(), nullable=False),
    sa.Column('clearratio', sa.Float(), nullable=False),
    sa.Column('efficacy', sa.Float(), nullable=False),
    sa.Column('link', sa.String(length=256), nullable=False),
    sa.Column('file', sa.String(length=256), nullable=True),
    sa.Column('warped', sa.String(length=256), nullable=False),
    sa.Column('enabled', sa.SmallInteger(), server_default=sa.text('1'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='datastorm'
    )
    op.create_index(op.f('ix_datastorm_scenes_enabled'), 'scenes', ['enabled'], unique=False, schema='datastorm')
    op.create_index('scenes_general', 'scenes', ['datacube', 'tileid', 'start', 'end', 'band'], unique=False, schema='datastorm')
    op.create_table('wrs',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=16), nullable=False),
    sa.Column('path', sa.Integer(), nullable=False),
    sa.Column('row', sa.Integer(), nullable=False),
    sa.Column('tileid', sa.String(length=16), nullable=False),
    sa.Column('x_min', sa.Float(), nullable=False),
    sa.Column('x_max', sa.Float(), nullable=False),
    sa.Column('y_min', sa.Float(), nullable=False),
    sa.Column('y_max', sa.Float(), nullable=False),
    sa.Column('lonmin', sa.Float(), nullable=False),
    sa.Column('lonmax', sa.Float(), nullable=False),
    sa.Column('latmin', sa.Float(), nullable=False),
    sa.Column('latmax', sa.Float(), nullable=False),
    sa.Column('srs', sa.String(length=128), nullable=False),
    sa.Column('geom', sa.String(length=1024), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='datastorm'
    )
    op.create_index('geo', 'wrs', ['lonmin', 'lonmax', 'latmin', 'latmax'], unique=True, schema='datastorm')
    op.create_index('npr', 'wrs', ['name', 'tileid'], unique=True, schema='datastorm')
    op.create_table('activities',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('app', sa.String(length=64), nullable=False),
    sa.Column('sceneid', sa.String(length=64), nullable=False),
    sa.Column('satellite', sa.String(length=8), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=16), nullable=True),
    sa.Column('link', sa.String(length=256), nullable=True),
    sa.Column('file', sa.String(length=128), nullable=True),
    sa.Column('start', sa.DateTime(), nullable=True),
    sa.Column('end', sa.DateTime(), nullable=True),
    sa.Column('elapsed', sa.Time(), nullable=True),
    sa.Column('retcode', sa.Integer(), nullable=True),
    sa.Column('message', sa.String(length=512), nullable=True),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['celery_taskmeta.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='radcor'
    )
    op.drop_index('idx_tiles_geom', table_name='tiles')
    op.drop_index('idx_tiles_geom_wgs84', table_name='tiles')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index('idx_tiles_geom_wgs84', 'tiles', ['geom_wgs84'], unique=False)
    op.create_index('idx_tiles_geom', 'tiles', ['geom'], unique=False)
    op.drop_table('activities', schema='radcor')
    op.drop_index('npr', table_name='wrs', schema='datastorm')
    op.drop_index('geo', table_name='wrs', schema='datastorm')
    op.drop_table('wrs', schema='datastorm')
    op.drop_index('scenes_general', table_name='scenes', schema='datastorm')
    op.drop_index(op.f('ix_datastorm_scenes_enabled'), table_name='scenes', schema='datastorm')
    op.drop_table('scenes', schema='datastorm')
    op.drop_index(op.f('ix_datastorm_qlook_sceneid'), table_name='qlook', schema='datastorm')
    op.drop_table('qlook', schema='datastorm')
    op.drop_index('products_general', table_name='products', schema='datastorm')
    op.drop_table('products', schema='datastorm')
    op.drop_index('mosaics_general', table_name='mosaics', schema='datastorm')
    op.drop_table('mosaics', schema='datastorm')
    op.drop_table('datacubes', schema='datastorm')
    op.drop_index('sceneid', table_name='activities', schema='datastorm')
    op.drop_table('activities', schema='datastorm')
    op.drop_index(op.f('ix_catalogo_Scene_Sensor'), table_name='Scene', schema='catalogo')
    op.drop_index(op.f('ix_catalogo_Scene_Row'), table_name='Scene', schema='catalogo')
    op.drop_index(op.f('ix_catalogo_Scene_Path'), table_name='Scene', schema='catalogo')
    op.drop_index(op.f('ix_catalogo_Scene_Date'), table_name='Scene', schema='catalogo')
    op.drop_index('Scene_idx6', table_name='Scene', schema='catalogo')
    op.drop_index('Scene_idx1', table_name='Scene', schema='catalogo')
    op.drop_table('Scene', schema='catalogo')
    op.drop_table('Request', schema='catalogo')
    op.drop_index(op.f('ix_catalogo_Qlook_SceneId'), table_name='Qlook', schema='catalogo')
    op.drop_table('Qlook', schema='catalogo')
    op.drop_table('Products', schema='catalogo')
    op.drop_table('Dataset', schema='catalogo')
    # ### end Alembic commands ###
