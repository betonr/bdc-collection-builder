"""Add cube models

Revision ID: 0fac592968d3
Revises:
Create Date: 2019-10-30 14:16:53.284706

"""
from alembic import op
import geoalchemy2
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0fac592968d3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('grs_schemas',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.String(length=20), nullable=False),
    sa.Column('description', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('providers',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.String(length=20), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('storage_type', sa.String(length=16), nullable=False),
    sa.Column('description', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('raster_chunk_schemas',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.String(length=20), nullable=False),
    sa.Column('raster_size_x', sa.Integer(), nullable=True),
    sa.Column('raster_size_y', sa.Integer(), nullable=True),
    sa.Column('raster_size_t', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('spatial_resolution_schemas',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.String(length=20), nullable=False),
    sa.Column('resolution_x', sa.Float(precision=53), nullable=False),
    sa.Column('resolution_y', sa.Float(precision=53), nullable=False),
    sa.Column('resolution_unit', sa.String(length=16), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('temporal_composition_schemas',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.String(length=20), nullable=False),
    sa.Column('temporal_composite_unit', sa.String(length=16), nullable=False),
    sa.Column('temporal_schema', sa.String(length=16), nullable=False),
    sa.Column('temporal_composite_t', sa.String(length=16), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cube_collections',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.String(length=20), nullable=False),
    sa.Column('spatial_resolution_schema', sa.String(length=20), nullable=False),
    sa.Column('temporal_composition_schema', sa.String(length=20), nullable=False),
    sa.Column('raster_chunk_schema', sa.String(length=20), nullable=False),
    sa.Column('grs_schema', sa.String(length=20), nullable=False),
    sa.Column('version', sa.String(length=16), nullable=False),
    sa.Column('description', sa.String(length=64), nullable=False),
    sa.ForeignKeyConstraint(['grs_schema'], ['grs_schemas.id'], ),
    sa.ForeignKeyConstraint(['raster_chunk_schema'], ['raster_chunk_schemas.id'], ),
    sa.ForeignKeyConstraint(['spatial_resolution_schema'], ['spatial_resolution_schemas.id'], ),
    sa.ForeignKeyConstraint(['temporal_composition_schema'], ['temporal_composition_schemas.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tiles',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.String(length=20), nullable=False),
    sa.Column('grs_schema', sa.String(length=20), nullable=False),
    sa.Column('geom_wgs84', geoalchemy2.types.Geometry(), nullable=True),
    sa.Column('geom', geoalchemy2.types.Geometry(), nullable=True),
    sa.ForeignKeyConstraint(['grs_schema'], ['grs_schemas.id'], ),
    sa.PrimaryKeyConstraint('id', 'grs_schema'),
    sa.UniqueConstraint('id')
    )
    op.create_table('asset_providers',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('cube_collection', sa.String(length=20), nullable=False),
    sa.Column('provider', sa.String(length=20), nullable=False),
    sa.Column('storage_info', sa.String(length=32), nullable=True),
    sa.Column('description', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['cube_collection'], ['cube_collections.id'], ),
    sa.ForeignKeyConstraint(['provider'], ['providers.id'], ),
    sa.PrimaryKeyConstraint('cube_collection', 'provider')
    )
    op.create_table('bands',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.String(length=20), nullable=False),
    sa.Column('cube_collection', sa.String(length=20), nullable=False),
    sa.Column('min', sa.Float(), nullable=True),
    sa.Column('max', sa.Float(), nullable=True),
    sa.Column('fill', sa.Integer(), nullable=True),
    sa.Column('scale', sa.String(length=16), nullable=True),
    sa.Column('commom_name', sa.String(length=16), nullable=True),
    sa.Column('data_type', sa.String(length=16), nullable=True),
    sa.Column('mime_type', sa.String(length=16), nullable=True),
    sa.Column('description', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['cube_collection'], ['cube_collections.id'], ),
    sa.PrimaryKeyConstraint('id', 'cube_collection'),
    sa.UniqueConstraint('id')
    )
    op.create_table('composite_functions',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.String(length=20), nullable=False),
    sa.Column('cube_collection', sa.String(length=20), nullable=False),
    sa.Column('description', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['cube_collection'], ['cube_collections.id'], ),
    sa.PrimaryKeyConstraint('id', 'cube_collection'),
    sa.UniqueConstraint('id')
    )
    op.create_table('cube_tiles',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('cube_collection', sa.String(length=20), nullable=False),
    sa.Column('grs_schema', sa.String(length=20), nullable=False),
    sa.Column('tile', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['cube_collection'], ['cube_collections.id'], ),
    sa.ForeignKeyConstraint(['grs_schema'], ['grs_schemas.id'], ),
    sa.ForeignKeyConstraint(['tile'], ['tiles.id'], ),
    sa.PrimaryKeyConstraint('cube_collection', 'grs_schema', 'tile')
    )
    op.create_table('band_compositions',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('cube_collection', sa.String(length=20), nullable=False),
    sa.Column('band', sa.String(length=20), nullable=False),
    sa.Column('product', sa.String(length=16), nullable=False),
    sa.Column('product_band', sa.String(length=16), nullable=False),
    sa.Column('description', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['band'], ['bands.id'], ),
    sa.ForeignKeyConstraint(['cube_collection'], ['cube_collections.id'], ),
    sa.PrimaryKeyConstraint('cube_collection', 'band', 'product', 'product_band'),
    sa.UniqueConstraint('product'),
    sa.UniqueConstraint('product_band')
    )
    op.create_table('cube_items',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cube_collection', sa.String(length=20), nullable=False),
    sa.Column('grs_schema', sa.String(length=20), nullable=False),
    sa.Column('tile', sa.String(length=20), nullable=False),
    sa.Column('composite_function', sa.String(length=20), nullable=False),
    sa.Column('item_date', sa.Date(), nullable=False),
    sa.Column('composite_start', sa.Date(), nullable=False),
    sa.Column('composite_end', sa.Date(), nullable=True),
    sa.Column('quicklook', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['composite_function'], ['composite_functions.id'], ),
    sa.ForeignKeyConstraint(['cube_collection'], ['cube_collections.id'], ),
    sa.ForeignKeyConstraint(['grs_schema'], ['grs_schemas.id'], ),
    sa.ForeignKeyConstraint(['tile'], ['tiles.id'], ),
    sa.PrimaryKeyConstraint('id', 'cube_collection', 'grs_schema', 'tile', 'composite_function', 'item_date'),
    sa.UniqueConstraint('id')
    )
    op.create_table('cubes',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.String(length=20), nullable=False),
    sa.Column('cube_collection', sa.String(length=20), nullable=True),
    sa.Column('provider', sa.String(length=20), nullable=True),
    sa.Column('composite_function', sa.String(length=20), nullable=True),
    sa.Column('oauth_info', sa.String(length=16), nullable=True),
    sa.Column('description', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['composite_function'], ['composite_functions.id'], ),
    sa.ForeignKeyConstraint(['cube_collection'], ['cube_collections.id'], ),
    sa.ForeignKeyConstraint(['provider'], ['providers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('assets',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cube_collection', sa.String(length=20), nullable=False),
    sa.Column('band', sa.String(length=20), nullable=True),
    sa.Column('grs_schema', sa.String(length=20), nullable=True),
    sa.Column('tile', sa.String(length=20), nullable=True),
    sa.Column('cube_item', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['band'], ['bands.id'], ),
    sa.ForeignKeyConstraint(['cube_collection'], ['cube_collections.id'], ),
    sa.ForeignKeyConstraint(['cube_item'], ['cube_items.id'], ),
    sa.ForeignKeyConstraint(['grs_schema'], ['grs_schemas.id'], ),
    sa.ForeignKeyConstraint(['tile'], ['tiles.id'], ),
    sa.PrimaryKeyConstraint('id', 'cube_collection'),
    sa.UniqueConstraint('id')
    )
    op.create_table('asset_compositions',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('cube_collection', sa.String(length=20), nullable=False),
    sa.Column('asset', sa.Integer(), nullable=False),
    sa.Column('product', sa.String(length=16), nullable=False),
    sa.Column('product_band', sa.String(length=16), nullable=False),
    sa.Column('reference_date', sa.Date(), nullable=False),
    sa.Column('file_path', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['asset'], ['assets.id'], ),
    sa.ForeignKeyConstraint(['cube_collection'], ['cube_collections.id'], ),
    sa.ForeignKeyConstraint(['product'], ['band_compositions.product'], ),
    sa.ForeignKeyConstraint(['product_band'], ['band_compositions.product_band'], ),
    sa.PrimaryKeyConstraint('cube_collection', 'asset', 'product', 'product_band', 'reference_date')
    )
    op.create_table('asset_links',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('cube_collection', sa.String(length=20), nullable=False),
    sa.Column('provider', sa.String(length=20), nullable=False),
    sa.Column('asset', sa.Integer(), nullable=False),
    sa.Column('file_path', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['asset'], ['assets.id'], ),
    sa.PrimaryKeyConstraint('cube_collection', 'provider', 'asset')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('asset_links')
    op.drop_table('asset_compositions')
    op.drop_table('assets')
    op.drop_table('cubes')
    op.drop_table('cube_items')
    op.drop_table('band_compositions')
    op.drop_table('cube_tiles')
    op.drop_table('composite_functions')
    op.drop_table('bands')
    op.drop_table('asset_providers')
    op.drop_table('tiles')
    op.drop_table('cube_collections')
    op.drop_table('temporal_composition_schemas')
    op.drop_table('spatial_resolution_schemas')
    op.drop_table('raster_chunk_schemas')
    op.drop_table('providers')
    op.drop_table('grs_schemas')
    # ### end Alembic commands ###
