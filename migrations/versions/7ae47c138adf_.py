"""empty message

Revision ID: 7ae47c138adf
Revises: 0fac592968d3
Create Date: 2019-11-11 09:51:00.163606

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7ae47c138adf'
down_revision = '0fac592968d3'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('activities',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('app', sa.String(length=64), nullable=False),
    sa.Column('datacube', sa.String(length=32), nullable=True),
    sa.Column('tileid', sa.String(length=16), nullable=True),
    sa.Column('start', sa.Date(), nullable=False),
    sa.Column('end', sa.Date(), nullable=False),
    sa.Column('ttable', sa.String(length=16), nullable=True),
    sa.Column('tid', sa.BigInteger(), nullable=True),
    sa.Column('tsceneid', sa.String(length=64), nullable=True),
    sa.Column('band', sa.String(length=16), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=16), nullable=True),
    sa.Column('pstart', sa.DateTime(), nullable=True),
    sa.Column('pend', sa.DateTime(), nullable=True),
    sa.Column('elapsed', sa.Time(), nullable=True),
    sa.Column('retcode', sa.Integer(), nullable=True),
    sa.Column('message', sa.String(length=512), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='datastore'
    )
    op.create_index('sceneid', 'activities', ['tsceneid', 'band'], unique=False, schema='datastore')
    op.create_table('datacubes',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('datacube', sa.String(length=48), nullable=False),
    sa.Column('wrs', sa.String(length=16), nullable=False),
    sa.Column('tschema', sa.String(length=16), nullable=False),
    sa.Column('step', sa.Integer(), nullable=False),
    sa.Column('satsen', sa.String(length=32), nullable=False),
    sa.Column('bands', sa.String(length=128), nullable=False),
    sa.Column('quicklook', sa.String(length=64), server_default=sa.text("'swir2,nir,red'"), nullable=False),
    sa.Column('start', sa.Date(), nullable=True),
    sa.Column('end', sa.Date(), nullable=True),
    sa.Column('resx', sa.Float(), nullable=False),
    sa.Column('resy', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='datastore'
    )
    op.create_table('mosaics',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('datacube', sa.String(length=32), nullable=False),
    sa.Column('tileid', sa.String(length=16), nullable=False),
    sa.Column('start', sa.Date(), nullable=False),
    sa.Column('end', sa.Date(), nullable=False),
    sa.Column('numcol', sa.Integer(), nullable=False),
    sa.Column('numlin', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='datastore'
    )
    op.create_index('mosaics_general', 'mosaics', ['datacube', 'tileid', 'start', 'end'], unique=True, schema='datastore')
    op.create_table('products',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('datacube', sa.String(length=48), nullable=False),
    sa.Column('tileid', sa.String(length=16), nullable=False),
    sa.Column('start', sa.Date(), nullable=False),
    sa.Column('end', sa.Date(), nullable=False),
    sa.Column('type', sa.String(length=16), server_default=sa.text("'SCENE'"), nullable=False),
    sa.Column('sceneid', sa.String(length=64), nullable=False),
    sa.Column('band', sa.String(length=16), nullable=False),
    sa.Column('cloud', sa.Float(), nullable=False),
    sa.Column('processingdate', sa.DateTime(), nullable=True),
    sa.Column('TL_Latitude', sa.Float(), nullable=True),
    sa.Column('TL_Longitude', sa.Float(), nullable=True),
    sa.Column('BR_Latitude', sa.Float(), nullable=True),
    sa.Column('BR_Longitude', sa.Float(), nullable=True),
    sa.Column('TR_Latitude', sa.Float(), nullable=True),
    sa.Column('TR_Longitude', sa.Float(), nullable=True),
    sa.Column('BL_Latitude', sa.Float(), nullable=True),
    sa.Column('BL_Longitude', sa.Float(), nullable=True),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='datastore'
    )
    op.create_index('products_general', 'products', ['type', 'datacube', 'tileid', 'start', 'end'], unique=False, schema='datastore')
    op.create_table('qlook',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('datacube', sa.String(length=48), nullable=False),
    sa.Column('tileid', sa.String(length=16), nullable=False),
    sa.Column('start', sa.Date(), nullable=False),
    sa.Column('end', sa.Date(), nullable=False),
    sa.Column('sceneid', sa.String(length=64), nullable=False),
    sa.Column('qlookfile', sa.String(length=256), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='datastore'
    )
    op.create_index(op.f('ix_datastore_qlook_sceneid'), 'qlook', ['sceneid'], unique=False, schema='datastore')
    op.create_table('scenes',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('datacube', sa.String(length=32), nullable=False),
    sa.Column('tileid', sa.String(length=16), nullable=False),
    sa.Column('start', sa.Date(), nullable=False),
    sa.Column('end', sa.Date(), nullable=False),
    sa.Column('type', sa.String(length=16), server_default=sa.text("'SCENE'"), nullable=False),
    sa.Column('dataset', sa.String(length=16), nullable=False),
    sa.Column('sceneid', sa.String(length=64), nullable=False),
    sa.Column('band', sa.String(length=16), nullable=False),
    sa.Column('pathrow', sa.String(length=16), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('cloud', sa.Float(), nullable=False),
    sa.Column('resolution', sa.Float(), nullable=False),
    sa.Column('cloudratio', sa.Float(), nullable=False),
    sa.Column('clearratio', sa.Float(), nullable=False),
    sa.Column('efficacy', sa.Float(), nullable=False),
    sa.Column('link', sa.String(length=256), nullable=False),
    sa.Column('file', sa.String(length=256), nullable=True),
    sa.Column('warped', sa.String(length=256), nullable=False),
    sa.Column('enabled', sa.SmallInteger(), server_default=sa.text('1'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='datastore'
    )
    op.create_index(op.f('ix_datastore_scenes_enabled'), 'scenes', ['enabled'], unique=False, schema='datastore')
    op.create_index('scenes_general', 'scenes', ['datacube', 'tileid', 'start', 'end', 'band'], unique=False, schema='datastore')
    op.create_table('wrs',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=16), nullable=False),
    sa.Column('path', sa.Integer(), nullable=False),
    sa.Column('row', sa.Integer(), nullable=False),
    sa.Column('tileid', sa.String(length=16), nullable=False),
    sa.Column('x_min', sa.Float(), nullable=False),
    sa.Column('x_max', sa.Float(), nullable=False),
    sa.Column('y_min', sa.Float(), nullable=False),
    sa.Column('y_max', sa.Float(), nullable=False),
    sa.Column('lonmin', sa.Float(), nullable=False),
    sa.Column('lonmax', sa.Float(), nullable=False),
    sa.Column('latmin', sa.Float(), nullable=False),
    sa.Column('latmax', sa.Float(), nullable=False),
    sa.Column('srs', sa.String(length=128), nullable=False),
    sa.Column('geom', sa.String(length=1024), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='datastore'
    )
    op.create_index('geo', 'wrs', ['lonmin', 'lonmax', 'latmin', 'latmax'], unique=True, schema='datastore')
    op.create_index('npr', 'wrs', ['name', 'tileid'], unique=True, schema='datastore')
    op.create_table('activities',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('app', sa.String(length=64), nullable=False),
    sa.Column('sceneid', sa.String(length=64), nullable=False),
    sa.Column('satellite', sa.String(length=8), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=16), nullable=True),
    sa.Column('link', sa.String(length=256), nullable=True),
    sa.Column('file', sa.String(length=128), nullable=True),
    sa.Column('start', sa.DateTime(), nullable=True),
    sa.Column('end', sa.DateTime(), nullable=True),
    sa.Column('elapsed', sa.Time(), nullable=True),
    sa.Column('retcode', sa.Integer(), nullable=True),
    sa.Column('message', sa.String(length=512), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    schema='radcor'
    )
    op.drop_index('idx_tiles_geom', table_name='tiles')
    op.drop_index('idx_tiles_geom_wgs84', table_name='tiles')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index('idx_tiles_geom_wgs84', 'tiles', ['geom_wgs84'], unique=False)
    op.create_index('idx_tiles_geom', 'tiles', ['geom'], unique=False)
    op.drop_table('activities', schema='radcor')
    op.drop_index('npr', table_name='wrs', schema='datastore')
    op.drop_index('geo', table_name='wrs', schema='datastore')
    op.drop_table('wrs', schema='datastore')
    op.drop_index('scenes_general', table_name='scenes', schema='datastore')
    op.drop_index(op.f('ix_datastore_scenes_enabled'), table_name='scenes', schema='datastore')
    op.drop_table('scenes', schema='datastore')
    op.drop_index(op.f('ix_datastore_qlook_sceneid'), table_name='qlook', schema='datastore')
    op.drop_table('qlook', schema='datastore')
    op.drop_index('products_general', table_name='products', schema='datastore')
    op.drop_table('products', schema='datastore')
    op.drop_index('mosaics_general', table_name='mosaics', schema='datastore')
    op.drop_table('mosaics', schema='datastore')
    op.drop_table('datacubes', schema='datastore')
    op.drop_index('sceneid', table_name='activities', schema='datastore')
    op.drop_table('activities', schema='datastore')
    # ### end Alembic commands ###
